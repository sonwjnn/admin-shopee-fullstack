<!-- jquery -->
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<!--add product form-->
<script>
  $(document).ready(function() {
    $('#formProductsAdd').on('submit', function(e) {
      e.preventDefault()
      const name = $('#name').val()
      const origin = $('#origin').val()
      const price = $('#price').val()
      const productType = $('#productType').val()
      const cateType = $('#cateType').val()
      const producedAt = $('#producedAt').val()
      const discount = $('#discount').val()
      const status = $('#status').val()
      const info = CKEDITOR.instances['productStory'].getData()
      const originalImageName = $('#image').prop('files')[0] ? $('#image').prop('files')[0].name : ''
      // Upload image

      const data = {
        name,
        origin,
        price,
        productType,
        cateType,
        status,
        info,
        producedAt,
        originalImageName
      }

      if (discount)
        data.discount = discount

      // image name get value from res of add product action and use to upload image after
      let imageName

      const imagePromise = new Promise((rs, rj) => {
        $.ajax({
          url: '/admin/products/add',
          type: 'POST',
          data,
          success: function(res) {
            $('#msg').text(res.message)
            $('#popupInfo').click()
            imageName = res.imageName

            rs()
          },
          error: function(xhr, status, error) {
            if (xhr.responseJSON && xhr.responseJSON.message) {
              $("#msg").html(xhr.responseJSON.message)
              $("#popupInfo").click()
            }
            rj()
          }
        })
      })

      imagePromise.then(() => {
        const formData = new FormData(this)
        $.ajax({
          url: '/admin/products/upload-image',
          type: 'POST',
          data: formData,
          processData: false,
          contentType: false,
          headers: {
            'X-Image-Name': imageName
          },
          success: function(res) {
            console.log(res)
          }
        });
      })

    });
  });
</script>

<!--edit product form-->
<script>
  $(document).ready(function() {
    $('#formProductsEdit').on('submit', function(e) {
      e.preventDefault();
      const name = $('#name').val()
      const origin = $('#origin').val()
      const price = $('#price').val()
      const productType = $('#productType').val()
      const cateType = $('#cateType').val()
      const producedAt = $('#producedAt').val()
      const discount = $('#discount').val()
      const status = $('#status').val()
      const info = CKEDITOR.instances['productInfo'].getData()
      const id = $('#id').val()
      const newImageName = $('#image').prop('files')[0] ? $('#image').prop('files')[0].name : ''
      console.log(newImageName)
      const data = {
        id,
        name,
        origin,
        price,
        productType,
        cateType,
        status,
        info,
        producedAt
      }

      if (discount)
        data.discount = discount
      if (newImageName !== '') {
        data.originalImageName = newImageName
        console.log(date)
      }

      // image name get value from res of add product action and use to upload image after
      let imageName

      const imagePromise = new Promise((rs, rj) => {
        $.ajax({
          url: '/admin/products/update',
          type: 'PUT',
          data,
          success: function(res) {
            $('#msg').text(res.message)
            $('#popupInfo').click()
            imageName = res.product.imageName
            rs()
          },
          error: function(xhr, status, error) {
            if (xhr.responseJSON && xhr.responseJSON.message) {
              $("#msg").html(xhr.responseJSON.message)
              $("#popupInfo").click()
            }
            rj()
          }
        })
      })

      imagePromise.then(() => {
        if (imageName) {
          const formData = new FormData(this)
          $.ajax({
            url: '/admin/products/upload-image',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            headers: {
              'X-Image-Name': imageName
            },
            success: function(res) {

            }
          });
        }
      })
    })
  });
</script>


<script>
  $("#firstImage").click(function() {
    $('#imageSecond').val('Fisrt Image');
    $('#imageSecond').addClass('showBorder');
  });
  $("#secondImage").click(function() {
    $('#imageSecond').val('Second Image');
    $('#imageSecond').addClass('showBorder');
  });
  $("#thirdImage").click(function() {
    $('#imageSecond').val('Third Image');
    $('#imageSecond').addClass('showBorder');
  });
  $("#fourthImage").click(function() {
    $('#imageSecond').val('Fourth Image');
    $('#imageSecond').addClass('showBorder');
  });
</script>

<script>
  $("#checkAll").click(function() {
    var index = $('#checkAll').val();

    if (index == '1') {
      $('.imgbgchk').prop('checked', true);
      $('#checkAll').val('2');

    } else {
      $('.imgbgchk').prop('checked', false);
      $('#checkAll').val('1');
    }
  })
</script>

<script>
  $(document).ready(function() {
    const names = [];
    $.ajax({
      url: '/admin/products/list',
      type: 'GET',
      success: function(res) {
        names = res.map((product) => product.name)
      }
    });

    $("#searchName").autocomplete({
      source: names
    });


    $('#searchForm').on('submit', function(e) {
      e.preventDefault();

      const name = $('#searchName').val();

      const link = '/admin/products/search/' + name;
      window.location.href = link;
    })
  })
</script>/
<script src="/toStringDate.js"></script>
<script>
  function getName(id) {
    $.ajax({
      url: `/admin/products/detail/${id}`,
      type: 'GET',
      success: function(data) {
        //key = #{key} is id of element html, value is value
        const mapping = {
          idUser: 'id',
          name: 'name',
          origin: 'origin',
          price: 'price',
          discount: 'discount',
          discountPrice: 'discountPrice',
          producedAt: 'producedAt',
          productType: 'typeId.name',
          cateType: 'cateId.name',
          info: 'info',
          status: 'status'
        };

        for (const key in mapping) {
          const value = mapping[key];
          let fieldValue = data;
          value.split('.').forEach(prop => {
            fieldValue = fieldValue[prop];
          });
          $('#' + key).val(fieldValue);
        }

        const formattedProducedAt = toStringDate.dmy(data.producedAt)
        $('#producedAt').val(formattedProducedAt);


        const imageNameShow = `background-image: url('/img/products/${data.imageName}');`;
        $("#imageName").attr('style', imageNameShow);

        CKEDITOR.instances['info'].setData(data.info);
        $('#exampleModalCenter2').attr('style', 'overflow: auto !important;')
        $('#popupDetail').click();
      }
    });
  }
</script>
<script>
  $('#clickMe').click(function() {
    const text = $('#storyid').text();
    CKEDITOR.instances['productInfo'].setData(text);
  })
  $(document).ready(function() {
    $('#clickMe').click();
  })
</script>


<script>
  function GetIdToDelete(id) {
    $('#idDelete').text(id);
  }

  function deleteProduct() {
    const id = $('#idDelete').text();
    $.ajax({
      url: '/admin/products/' + id,
      type: 'DELETE',
      success: function(res) {
        location.reload();
      }
    })
  }
</script>


<script>
  $(document).ready(function() {
    var ids = [];

    $('.deleteGr').click(function() {
      var i = 0;
      $('#productTable tr').filter(':has(:checkbox:checked)').each(function() {
        var id = $(this).closest("tr").find("td:nth-child(4)").text();
        id = id.replace(/ /g, '');
        id = id.replace(/(\r\n|\n|\r)/gm, "");
        ids[i] = id;
        i++;
      });

      if (ids.length == 0) {
        $('#popupDeleteGrNoData').click();
      } else {
        $('#popupDeleteGr').click();
      }

    })

    $('#buttonDeleteGr').click(function() {

      $.ajax({
        url: '/admin/products',
        type: 'DELETE',
        contentType: 'application/json',
        data: JSON.stringify({
          ids
        }),
        success: function(res) {
          location.reload();
        },
        error: function(xhr, status, error) {
          console.log('Error' + error)
        }
      })

    })
  })
</script>

<script>
  $("#newFile").click(function() {
    $('#labelNewFile').click();
  });
</script>

<script>
  $('#edit').click(function() {
    var id = $('#idProduct').val();
    var link = '/admin/products/edit/' + id;
    window.location.href = link;
  })
</script>


<script>
  $(document).ready(function() {
    $("#image").change(function() {

      var path = $('#image').val();
      var name = '';
      for (var i = 12; i < path.length; i++) {
        name = name + path[i];
      }
      $('#imageShow').val(name);
    });
  });
</script>


<script>
  /*
    The logic is that when selecting or changing a product type,
    a new category is suggested when adding products
  */
  $(document).ready(async function() {
    const cates = [];
    const types = [];
    const currentSelectedType = $("#productType").val()
    const cateType = document.getElementById('cateType');

    $.ajax({
      url: '/admin/categories/list',
      type: 'GET',
      success: function(res) {
        cates.push(...res);
      },
      error: function(xhr, status, error) {
        console.log('Error' + error)
      }
    })
    $.ajax({
      url: '/admin/product-types/by-name/' + currentSelectedType,
      type: 'GET',
      success: function(res) {
        types.push(...res);
        displayMatchingCategories(currentSelectedType);
      },
      error: function(xhr, status, error) {
        console.log('Error' + error)
      }
    })

    $("#productType").change(function(e) {
      const selectedType = e.target.value;
      cateType.innerHTML = '';

      $.ajax({
        url: '/admin/product-types/by-name/' + selectedType,
        type: 'GET',
        success: function(res) {

          types.length = 0; // Xóa các phần tử trong mảng types
          types.push(...res);
          displayMatchingCategories(selectedType);
          cateType.disabled = false;
        },
        error: function(xhr, status, error) {
          console.log('Error' + error)
        }
      });
    });

    // Hiển thị danh sách các danh mục phù hợp với loại sản phẩm đã chọn
    const displayMatchingCategories = (selectedType) => {

      const matchingCategories = cates.filter(cate => {
        return types.some(type => type.name === selectedType && type.cateId === cate._id);
      });

      matchingCategories.forEach(cate => {
        const option = document.createElement('option');
        option.value = cate.name;
        option.textContent = cate.name;
        cateType.appendChild(option);
      });


    }
  });
</script>

<script>
  $(document).ready(() => {
    $('#price').on('input', updateDiscountPrice);
    $('#discount').on('input', updateDiscountPrice);

    function updateDiscountPrice() {
      const priceValue = parseFloat($('#price').val());
      const discountValue = parseFloat($('#discount').val());

      if (priceValue && discountValue) {
        const discountPriceValue = priceValue - (priceValue * discountValue) / 100;
        $('#discountPrice').val(discountPriceValue.toFixed(2));
      } else if (!discountValue && priceValue) {
        $('#discountPrice').val(priceValue.toFixed(2));
      } else if (!priceValue) {
        $('#discountPrice').val('');
      }
    }
  })
</script>